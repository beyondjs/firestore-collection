/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/response/main';
// generator.ts
declare namespace ns_0 {
  import FirestoreErrorManager = ns_1.FirestoreErrorManager;
  export enum ErrorCodes {
    internalError = 1,
    documentNotSaved = 2,
    documentNotDeleted = 3,
    invalidParameters = 4,
    documentNotFound = 404,
  }
  export class ErrorGenerator {
    static internalError(exc?: Error): FirestoreErrorManager;
    static documentNotFound(collectionName: string, documentId: string, exc?: Error): FirestoreErrorManager;
    static documentNotSaved(collectionName: string, documentId: string, exc?: Error): FirestoreErrorManager;
    static documentNotDeleted(collectionName: string, documentId: string, exc?: Error): FirestoreErrorManager;
    static invalidParameters(parameters: string[]): FirestoreErrorManager;
  }
}


// manager.ts
declare namespace ns_1 {
  import ErrorManager = __beyond_dep_ns_0.ErrorManager;
  export class FirestoreErrorManager extends ErrorManager {
    get is(): string;
  }
}


export import ErrorCodes = ns_0.ErrorCodes;
export import ErrorGenerator = ns_0.ErrorGenerator;
export import FirestoreErrorManager = ns_1.FirestoreErrorManager;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };